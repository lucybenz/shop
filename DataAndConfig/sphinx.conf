#MySQL数据源配置，详情请查看：http://www.coreseek.cn/products-install/mysql/
#请先将var/test/documents.sql导入数据库，并配置好以下的MySQL用户密码数据库

#主索引定义
source goods
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = root
    sql_db                  = wwh_shop
    sql_port                = 3306
    sql_query_pre            = SET NAMES utf8

    sql_query                = SELECT a.goods_id,a.goods_name,a.goods_desc,a.is_update,GROUP_CONCAT(b.attr_value) attr_value FROM wwh_goods a LEFT JOIN wwh_goods_attr b ON a.goods_id=b.goods_id WHERE a.is_onsale='是' GROUP BY a.goods_id;
                                                              #sql_query第一列id需为整数
                                                              #title、content作为字符串/文本字段，被全文索引
    sql_attr_uint            = is_update           
    sql_query_post           = UPDATE wwh_max_goods_id SET goods_id=(SELECT MAX(goods_id) FROM wwh_goods) #更新字符串
}

#增量索引定义
source new_goods
{
    type                    = mysql

    sql_host                = localhost
    sql_user                = root
    sql_pass                = root
    sql_db                  = wwh_shop
    sql_port                = 3306
    sql_query_pre            = SET NAMES utf8
#取出新增的和被修改的数据,建立一个增量索引,is_update的值不需要取出来的全部设置为0即可
    sql_query                = SELECT a.goods_id,a.goods_name,a.goods_desc,0 is_update,GROUP_CONCAT(b.attr_value) attr_value FROM wwh_goods a LEFT JOIN wwh_goods_attr b ON a.goods_id=b.goods_id WHERE a.is_onsale='是' AND (a.goods_id>(SELECT * FROM wwh_max_goods_id) OR is_update=1) GROUP BY a.goods_id; 
                                                              
    sql_attr_uint            = is_update           
    sql_query_post           = UPDATE wwh_max_goods_id SET goods_id=(SELECT MAX(goods_id) FROM wwh_goods); #更新字符串
    sql_query_post           = UPDATE wwh_goods set is_update=0 where is_update=1; #更新字符串

}

#index定义
index goods
{
    source            = goods             #对应的source名称
    path            = E:/coreseek-3.2.14-win32/var/data/goods
    #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    #charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    charset_dictpath = E:\coreseek-3.2.14-win32\etc
    charset_type        = zh_cn.utf-8
}

#new_index定义
index new_goods
{
    source            = new_goods             #对应的source名称
    path            = E:/coreseek-3.2.14-win32/var/data/new_goods
    #请修改为实际使用的绝对路径，例如：/usr/local/coreseek/var/...
    docinfo            = extern
    mlock            = 0
    morphology        = none
    min_word_len        = 1
    html_strip                = 0

    #中文分词配置，详情请查看：http://www.coreseek.cn/products-install/coreseek_mmseg/
    #charset_dictpath = /usr/local/mmseg3/etc/ #BSD、Linux环境下设置，/符号结尾
    charset_dictpath = E:\coreseek-3.2.14-win32\etc
    charset_type        = zh_cn.utf-8
}


#全局index定义
indexer
{
    mem_limit            = 128M
}

#searchd服务定义
searchd
{
    listen                  =   9312
    read_timeout        = 5
    max_children        = 30
    max_matches            = 1000
    seamless_rotate        = 0
    preopen_indexes        = 0
    unlink_old            = 1
    pid_file = E:/coreseek-3.2.14-win32/var/log/searchd_mysql.pid
    log = E:/coreseek-3.2.14-win32/var/log/searchd_mysql.log
    query_log = E:/coreseek-3.2.14-win32/var/log/query_mysql.log
}